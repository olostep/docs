{
  "openapi": "3.0.3",
  "info": {
    "title": "Crawl API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://agent.olostep.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "paths": {
    "/crawl": {
      "post": {
        "summary": "Starts a new crawl process",
        "description": "Initiates a new crawl process with the specified parameters.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_url": {
                    "type": "string",
                    "description": "The starting point of the crawl."
                  },
                  "include_urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "URL path names in glob pattern to include. For example: \n- `'/**'` for the entire website\n- `'/blog/**'` for only blogs."
                  },
                  "exclude_urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "URL path names in glob pattern to exclude. For example: `/careers/**`. Excluded URLs will supersede included URLs."
                  },
                  "max_pages": {
                    "type": "number",
                    "description": "Maximum number of pages to crawl. Recommended for most use cases like crawling an entire website."
                  },
                  "max_depth": {
                    "type": "number",
                    "description": "Maximum depth of the crawl. Useful to extract only up to n-degree of links."
                  },
                  "include_external": {
                    "type": "boolean",
                    "description": "Crawl first-degree external links."
                  },
                  "search_query": {
                    "type": "string",
                    "description": "An optional search query to find specific links and also sort the results by relevance."
                  },
                  "top_n": {
                    "type": "number",
                    "description": "An optional number to only crawl the top N most relevant links on every page as per search query."
                  }
                },
                "required": ["start_url", "include_urls"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Crawl started successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "object": { "type": "string" },
                    "status": { "type": "string" },
                    "created": { "type": "number" },
                    "start_date": { "type": "string" },
                    "start_url": { "type": "string" },
                    "max_pages": { "type": "number" },
                    "max_depth": { "type": "number" },
                    "exclude_urls": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "include_urls": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "include_external": { "type": "boolean" },
                    "search_query": { "type": "string" },
                    "top_n": { "type": "number" },
                    "current_depth": { "type": "number" },
                    "pages_count": { "type": "number" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to incorrect or missing parameters."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/crawl/{crawlId}": {
      "get": {
        "summary": "Fetches information about a specific crawl",
        "description": "This endpoint retrieves details about a specific crawl using its `crawlId`. The response includes information such as the crawl status, the number of URLs crawled, the current depth, and the start time.",
        "parameters": [
          {
            "name": "crawlId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the crawl to retrieve information for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with crawl information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "object": { "type": "string" },
                    "status": { "type": "string" },
                    "created": { "type": "number" },
                    "start_date": { "type": "string" },
                    "start_url": { "type": "string" },
                    "max_pages": { "type": "number" },
                    "max_depth": { "type": "number" },
                    "exclude_urls": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "include_urls": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "include_external": { "type": "boolean" },
                    "search_query": { "type": "string" },
                    "top_n": { "type": "number" },
                    "current_depth": { "type": "number" },
                    "pages_count": { "type": "number" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to incorrect or missing parameters."
          },
          "404": {
            "description": "Crawl not found for the provided ID."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/crawl/{crawlId}/list": {
      "get": {
        "summary": "Fetches the list of pages for a specific crawl.",
        "description": "This endpoint retrieves the list of pages that have been crawled for a specific crawl ID. The response includes the pages along with their html and markdown as requested. The `search_query` parameter allows for sorting the results by relevance. The `formats` query parameter specifies the formats of the content to be fetched (e.g., HTML, Markdown). The `limit` parameter allows to limit the number of results returned. The `cursor` parameter gets the next set of urls.  The response includes the content for the URLs along with the total, successful, and failed URLs, and a `cursor` value for subsequent requests.",
        "parameters": [
          {
            "name": "crawlId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the crawl to retrieve the list of URLs for."
          },
          {
            "name": "formats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" }
            },
            "description": "JSON array of formats to fetch (e.g., [\"html\", \"markdown\"])."
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "An optional search query to sort the results by relevance. Uses the original search_query by default if provided."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Optional integer representing the index to start fetching content from. Useful to get the next set of urls until all are fetched. Start with 0, then provide *response['cursor']* value of the previous request."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Optional integer to limit the number of results returned. Recommended 50-100 results at a time. Paginated using *cursor*."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the list of URLs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "object": { "type": "string" },
                    "status": { "type": "string" },
                    "search_query": { "type": "string" },
                    "pages_count": { "type": "number" },
                    "pages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "dataset_id": { "type": "string" },
                          "url": { "type": "string" },
                          "is_external": { "type": "boolean" },
                          "html_content": { "type": "string" },
                          "markdown_content": { "type": "string" }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "external_urls": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "failed_urls": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    },
                    "cursor": { "type": "number" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to incorrect or missing parameters."
          },
          "404": {
            "description": "Crawl not found for the provided ID."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  }
}